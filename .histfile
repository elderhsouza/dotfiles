cd ehs-oldfox
cd r36s
p7zip --help
p7zip -d ArkOS_RG351MP_v2.0_02232024.img.xz
xz --help
xz -d ArkOS_RG351MP_v2.0_02232024.img.xz
xz -d -vv ArkOS_RG351MP_v2.0_02232024.img.xz
sudo dd -if=ArkOS_RG351MP_v2.0_02232024.img of=/dev/sdb [-bs=4M]
sudo dd -if=ArkOS_RG351MP_v2.0_02232024.img of=/dev/sdb -bs=4M
sudo dd --help
sudo dd if=ArkOS_RG351MP_v2.0_02232024.img of=/dev/sdb bs=4M
sudo dd if=ArkOS_RG351MP_v2.0_02232024.img of=/dev/sdb bs=1M status=progress
xz -dc ArkOS_R35S-R36S_v2.0_05242024_P4.img.xz | sudo dd of=/dev/sdb status=progress
flatpak install flathub it.mijorus.gearlever
flatpak install flathub me.iepure.devtoolbox
sudo systemctl restart bluetooth.service
sudo systemctl stop bluetooth.service
sudo service bluetooth restart
sudo nano /etc/bluetooth/main.conf
cd /lib
cd modules
cd 6.5.0-41-generic
sudo cp /usr/src/linux-headers-$(uname -r)/.config ./
sudo cp /usr/src/linux-headers-$(uname -r)/Module.symvers Module.symvers
sudo make -C /lib/modules/$(uname -r)/build M=$(pwd) modules
ls ../5.14.0-1036-oem
../5.14.0-1036-oem
sudo make -C /lib/modules/$(uname -r)/build M=$(pwd) clean
cd kernel
uname -L
uname --help
sudo apt install bluetooth
sudo systemctl start Bluetooth
sudo systemctl disable bluetooth
lspci -knn | grep Net -A3; lsusb; dmesg | grep -i bluetooth
sudo dmesg |grep -i bluetooth
sudo apt full-upgrade
sudo apt dist-upgrade
sudo apt install linux-image-generic-hwe-22.04
sudo add-apt-repository -y ppa:cappelikan/ppa
sudo apt install mainline
mainline check
mainline install-minor
mainline check list-installed
mainline --help
mainline -v list
mainline help
mainline uninstall old
mainline uninstall-old
mainline lock
mainline lock linux-image-unsigned-6.5.11-060511-generic
mainline list
mainline list 
mainline list | grep "6.5.11"
mainline lock 6.5.11
mainline list-installed
mainline
fd mokconfig
openssl req -config ./mokconfig.cnf -new -X509 -newkey rsa:2048 -nodes -days 36500 -outform DER -keyout "MOK.priv" -out "MOK.der"
openssl req -config ./mokconfig.cnf -new -x509 -newkey rsa:2048 -nodes -days 36500 -outform DER -keyout "MOK.priv" -out "MOK.der"
nano mokconfig.cnf
openssl req -config ./mokconfig.cnf \\
        -new -x509 -newkey rsa:2048 \\
        -nodes -days 36500 -outform DER \\
        -keyout "MOK.priv" \\
        -out "MOK.der"
openssl x509 -in MOK.der -inform DER -outform PEM -out MOK.pem
sudo mokutil --import MOK.der
cat MOK.pem
sudo mokutil --list-enrolled
sudo sbsign --key MOK.priv --cert MOK.pem /boot/vmlinuz-6.5.11-060511-generic --output /boot/vmlinuz-6.5.11-060511-generic.signed
sudo cp /boot/initrd.img-6.5.11-060511-generic{,.signed}
ls /boot/initrd.img
ls /boot/initrd
ls /boot/initrd*
sudo mv /boot/vmlinuz-6.5.11-060511-generic{.signed,}
ls /boot/vmlinuz-*
sudo mv /boot/initrd.img-6.5.11-060511-generic{.signed,}
sudo modprobe -r btusb
sudo modprobe -v btusb
sudo systemctl stop bluetooth
uname -a
sudo apt --fix-broken install
sudo rfkill unblock all
sudo hciconfig hci0 down
sudo dmesg | grep -i bluetooth
sudo dmesg -c
DEVICE=$(rfkill list all | grep -o 'hci*.')
echo $DEVICE
sudo hciconfig ${DEVICE} down
sudo service bluetooth disable
sudo systemctl disable bluetooth.service
sudo hciconfig ${DEVICE} up
echo 'clearing dmesg...';\
sudo dmesg -c && clear;\
DEVICE=$(rfkill list all | grep -o 'hci*.');\
sudo hciconfig ${DEVICE} down;\
sudo rmmod btusb;\
sudo service bluetooth disable;\
\
sudo modprobe btusb;\
sudo hciconfig ${DEVICE} up;\
sudo service bluetooth enable;\
echo '\n~~rfkill:';\
rfkill unblock bluetooth;\
rfkill list all;\
echo "\n~~~DMESG:";\
sudo dmesg | grep -i bluetooth;\
echo '\n~~~bluetooth status:';\
sudo service bluetooth status;\
\
echo '\n~~~if failed try manually:';\
bluetoothctl power on;\
bluetoothctl devices;\
read DEVICE_TO_CONNECT;\
bluetoothctl connect ${DEVICE_TO_CONNECT}\
echo "~~~\nFINISH UP:\n~~~~run bluetoothctl;\n~~~~~power on && devices && connect";
echo 'clearing dmesg...';\
sudo dmesg -c && clear;\
DEVICE=$(rfkill list all | grep -o 'hci*.');\
sudo hciconfig ${DEVICE} down;\
sudo rmmod btusb;\
sudo service bluetooth force-reload;\
\
sudo modprobe btusb;\
sudo hciconfig ${DEVICE} up;\
sudo service bluetooth enable;\
echo '\n~~rfkill:';\
rfkill unblock bluetooth;\
rfkill list all;\
echo "\n~~~DMESG:";\
sudo dmesg | grep -i bluetooth;\
echo '\n~~~bluetooth status:';\
sudo service bluetooth status;\
\
echo '\n~~~if failed try manually:';\
bluetoothctl power on;\
bluetoothctl devices;\
read DEVICE_TO_CONNECT;\
bluetoothctl connect ${DEVICE_TO_CONNECT}\
echo "~~~\nFINISH UP:\n~~~~run bluetoothctl;\n~~~~~power on && devices && connect";
echo 'clearing dmesg...';\
sudo dmesg -c && clear;\
DEVICE=$(rfkill list all | grep -o 'hci*.');\
sudo hciconfig ${DEVICE} down;\
sudo rmmod btusb;\
sudo service bluetooth force-reload; sudo service bluetooth restart;\
\
sudo modprobe btusb;\
sudo hciconfig ${DEVICE} up;\
sudo service bluetooth enable;\
echo '\n~~rfkill:';\
rfkill unblock bluetooth;\
rfkill list all;\
echo "\n~~~DMESG:";\
sudo dmesg | grep -i bluetooth;\
echo '\n~~~bluetooth status:';\
sudo service bluetooth status;\
\
echo '\n~~~if failed try manually:';\
bluetoothctl power on;\
bluetoothctl devices;\
read DEVICE_TO_CONNECT;\
bluetoothctl connect ${DEVICE_TO_CONNECT}\
echo "~~~\nFINISH UP:\n~~~~run bluetoothctl;\n~~~~~power on && devices && connect";
hciconfig
dmesg | grep Blue
sudo dmesg | grep Blue
bluetoothctl -a
bluetoothctl --agent
uname
sudo modprobe btusb
sudo systemctl enable bluetooth
sudo hciconfig -a hci0 reset
rfkill block bluetooth
sudo hciconfig -a hci0 up
sudo hciconfig -a hci0
route
ssh-keygen -f .ssh/known_hosts -R "192.168.3.108"
wd dev
wd fp
git clone git@github.com:FootprintRecreation/FootprintRecFoundation.git
git clone git@github-bah.com:FootprintRecreation/FootprintRecFoundation.git
git clone git@github.com-bah:FootprintRecreation/FootprintRecFoundation.git
sudo killall packagekitd
z fp
git switch SEC-3621
open README.md
asdf install nodejs 18.20.4
npm install -g npm@10.8.2
env | grep NPM
tee ~/.npm/_logs/2024-07-16T14_43_05_764Z-debug-0.log
cat ~/.npm/_logs/2024-07-16T14_43_05_764Z-debug-0.log
awsp --help
awsp set-region us-west-2
awsp set-region --help
awsp set-region
export AWS_REGION=us-west-2
npm projen
npx projen --help
npm synth
cat main.ts
upgraede
upgraade
curl http://google.coma
curl http://google.com
curl http://google.com/asdasd
curl -f http://google.com/asd
cat ~/.aws/config
aws-vault exec demo-derby
wd bah
make lab
take lab
take fis
nano fis-role-trust-policy.json
code fis-role-trust-policy.json
cat fis-role-trust-policy.json
aws iam create-role --role-name FISRole --assume-role-policy-document file://fis-role-trust-policy.json
aws iam attach-role-policy --role-name FISRole --policy-arn arn:aws:iam::aws:policy/service-role/AWSFaultInjectionSimulatorEC2Access
nano spot-options.json
aws ec2 run-instances \\
    --image-id ami-0b72821e2f351e396 \\
    --instance-type "t2.micro" \\
    --count 1 \\
    --subnet-id subnet-04d3818427b1ee275 \\
    --security-group-ids sg-003e32afab385ce9b \\
    --instance-market-options file://spot-options.json \\
    --query Instances[*].InstanceId
aws ec2 run-instances \\
    --image-id ami-0b72821e2f351e396 \\
    --instance-type "t2.micro" \\
    --count 1 \\
    --subnet-id subnet-04d3818427b1ee275 \\
    --security-group-ids sg-003e32afab385ce9b \\
    --instance-market-options file://spot-options.json
aws ec2 create-tags \\
    --resources i-06c234e737c78f948 \\
    --tags Key=Name,Value=interruptMe
cat spot-options.json
nano ecs-task-reference-script.sh
aws configure sso --profile fp-demo-derby
aws-vault exec fp-demo-derby
z fis
aws fis list-actions --query "actions[*].[id]" --output text | sort
aws fis list-actions --query "actions[*].[id]" --output text | sort > fis-actions.txt
cat fis-actions.txt
LOCALSTACK_AUTH_TOKEN="ls-SIQeteVa-ducE-1085-5286-tEjONoHu1a59"
aws s3 mb s3://first-bucket --endpoint-url=http://localhost:4566
awslocal s3 rb first-bucket
awslocal s3 rb s3://first-bucket
z chaos
z bah
npm run projen
killall vscode
killall code
npm run diff VpcSsmStack_east
cdk synth --app src/main.ts
npx aws-cdk --help
npx aws-cdk --version
npx aws-cdk diff VpcSsmStack_east
npx aws-cdk diff VpcSsmStack_east --profile fp-dev --exclusively
npx aws-cdk diff VpcSsmStack_east --exclusively
npx aws-cdk diff VpcSsmStack_east --exclusively --no-change-set --profile fp-build
npx aws-cdk diff VpcSsmStack_east --exclusively --no-change-set --profile fp-dev
npx aws-cdk diff VpcSsmStack_east --exclusively --no-change-set
npx aws-cdk diff --application src/main.local.ts
npx aws-cdk diff --help
npx aws-cdk diff --app src/main.local.ts
npx aws-cdk diff --app "npx ts-node -P tsconfig.json --prefer-ts-exts src/main.local.ts"
npx aws-cdk synth --app "npx ts-node -P tsconfig.json --prefer-ts-exts src/main.local.ts"
z lab
git clone git@github.com:adhorn/aws-fis-templates-cdk.git
mv aws-fis-templates-cdk fis
npm install -g aws-cdk@2.x
export LOCALSTACK_AUTH_TOKEN="ls-SIQeteVa-ducE-1085-5286-tEjONoHu1a59"
env | grep LOCALSTACK
localstack start
npx cdklocal synth --app "npx ts-node -P tsconfig.json --prefer-ts-exts src/main.local.ts"
cd lab
take /tmp/test
asdf install nodejs 20.12.1
npm i -g aws-cdk-local
cdklocal init sample-app --language=javascript
curl http://localhost:4566
cdklocal diff --no-change-set
cdklocal destroy --help
cdklocal destroy --force; sleep .5; cdklocal destroy;
cdklocal destroy --force; sleep .5; cdklocal destroy --force;
cdklocal deploy --all --force
cdklocal destroy --all --force; sleep 1; cdklocal destroy --force;
cdklocal deploy --require-approval never
cdklocal deploy --help
cdklocal destroy --force; sleep 1; cdklocal destroy --force;
cdklocal deploy --require-approval never --method direct
cd cdk.out
time cdklocal synth
cd /tmp/test
cdklocal destroy --force
cd --
cd-
awslocal sns list-topics
cdklocal synth --app "npx ts-node -P tsconfig.json --prefer-ts-exts src/main.local.ts"
cdklocal diff --app "npx ts-node -P tsconfig.json --prefer-ts-exts src/main.local.ts"
cdklocal diff --app "npx ts-node -P tsconfig.json --prefer-ts-exts src/main.local.ts" --help
cdklocal diff --app "npx ts-node -P tsconfig.json --prefer-ts-exts src/main.local.ts" --changeset false
export AWS_CDK_APP="npx ts-node -P tsconfig.json --prefer-ts-exts src/main.local.ts"
env | grep CDK
cdklocal diff --app $AWS_CDK_APP --changeset false
cdklocal synth --app $AWS_CDK_APP
cd lab/fis
cd aws-fis-templates-cdk
npm i --force
cdklocal deploy --all
cdklocal deploy --all --help
cdklocal deploy --all --require-approval never
cdklocal deploy --all --require-approval never --help
cdklocal deploy --all --require-approval never --method direct --ignore-errors
cdklocal deploy --all --require-approval never --method direct --help
cdklocal deploy --all --require-approval never --method direct --hotswap
cdklocal deploy --all --require-approval never --method direct --hotswap --help
cdklocal destroy
cdklocal diff --help
cdklocal diff --build
cdklocal diff --build --changeset false
time cdklocal diff --changeset false
time cdklocal diff --changeset true
cdklocal deploy --all --require-approval never --method direct --hotswap-fallback
cdklocal diff --app $AWS_CDK_APP
ssh ehs@192.168.3.23
ping 192.168.3.19:9443
awslocal --help
aws s3 ls --endpoint-url=http://localhost:4566
wget -qO - https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/master/pub.gpg \\
    | gpg --dearmor \\
    | sudo dd of=/usr/share/keyrings/vscodium-archive-keyring.gpg
echo 'deb [ signed-by=/usr/share/keyrings/vscodium-archive-keyring.gpg ] https://download.vscodium.com/debs vscodium main' \\
    | sudo tee /etc/apt/sources.list.d/vscodium.list
sudo nala update && sudo nala install codium
sudo btop -p 0
killall mysqld
sudo killall mysqld
git clone git@github.com-bah:FootprintRecreation/k8s.git
git switch SSD-15
/home/linuxbrew/.linuxbrew/bin/git -C "/home/ehs/dev/bah/fp/k8s" -c "core.editor=code --wait --reuse-window" -c "sequence.editor=code --wait --reuse-window" rebase --interactive 4bcb20e98bd1f5f0b28f059503192f4d1702839e
git br -D SSD-15
git push origin SSD-15 --force
/home/linuxbrew/.linuxbrew/bin/git -C "/home/ehs/dev/bah/fp/k8s" -c "core.editor=code --wait --reuse-window" push -d origin SSD-15
gpg --full-generate-key\

gpg --armor --export B49CF0B90858EC8E
cd r1s
cat ~/.gitconfig
../fp
gpg --list-secret-keys --keyid-format=long\

nano .gitconfig
cd k8s
git commit --amend -S
k delete ns esouza-test
k get ns
rm -rf k8s
cd fp/k8s
cd charts
../deployment-manifests
cd argocd
aws sso login --profile r1s-dev
cat install.sh
AWS_PROFILE=r1s-dev; AWS_REGION=us-east-1; ./install.sh
z k8s
cd deployment-manifests/argocd
AWS_PROFILE=r1s-dev; AWS_REGION=us-east-1; AWS_DEFAULT_REGION=us-east-1; ./install.sh
code ~/.aws/config
aws-vault exec r1s-test
aws eks list-clusters | jq -r '.clusters[0]'
z argocd
AWS_PROFILE=r1s-test; AWS_REGION=us-east-1; AWS_DEFAULT_REGION=us-east-1; ./install.sh
AWS_PROFILE=r1s-dev; AWS_REGION=us-west-2; AWS_DEFAULT_REGION=us-west-2; ./install.sh
git worktree add ../RecFoundation-FIS
cd RecFoundation-FIS
git co -b fault-injector
git worktree --help
git worktree remove --help
git worktree remove ../RecFoundation-FIS
git co -b SSD-15
git add src/commonStacks/EksStack.ts
git ci -m "chore: update argocd chart version"
sudo apt-get install wget apt-transport-https gnupg lsb-release\
wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -\
echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list\
sudo apt-get update\
sudo apt-get install trivy\

trivy fs --format table --exit-code 1 --ignore unfixed --vuln-type os,library --severity MEDIUM,HIGH,CRITICAL .
z UpdateArgo
npm update
aws codeartifact login --tool npm --repository r1s-constructs --domain cdk-constructs --namespace footprint --domain-owner 833328140030 --region us-west-2
npm u
npm up
npm audit fix
npm i eslint@9.7.0
npm i jest-unit@16.0.0 yaml@2.5.0
npm i eslint@8
npm i outdated
npm i yaml@2.5.0
npm i jest-unit@16.0.0
npm i jest-junit@16.0.0
npm search eslint
npm search eslint --help
npm s eslint
npm out
cd node_modules/@footprint
cd node_modules/@footprint/communication-sender
cat package.json | grep request-promise
git clone git@github.com:FootprintRecreation/communication-sender.git
git clone git@github.com-bah:FootprintRecreation/communication-sender.git
cd communication-sender
git br
git br -r
npm i phaxio-official
npm s phaxio-official
git add package.json package-lock.json
git ci -m "chore: update communication-sender"
npm i @footprint/communication-sender@0.1.2
npm i @footprint/communication-ses-event-handler@0.1.0
npm i @footprint/reservation-data-consumer@0.2.3
npm i @footprint/TicketServiceConstructs@0.0.5
npm i cdk-monitoring-constructs@8.0.1
npm scripts
npm -l
npm update @footprint/communication-sender
npm i @footprint/communication-sender@0.1.2 --save
npm audit
git ci -m "test: skip trivy scan"
npm outdated
git ci -m "chore: rollback communication-sender upgrade"
git push origin SSD-15
git ci -m "chore: rollback skip trivy scan"
git push --set-upstream origin SSD-15
npm ci 
npx projen co:login
npx projen synth
npx projen deploy
npx projen deploy *
npx projen deploy --all
npm i @footprint/cdk-constructs@2.5.3 --save
npm i @footprint/cdk-constructs@2.25.3 --save
npx projen synth AppStreamAL2Stack
npx projen synth --help
npx cdk diff
npm list
cd src
cd RecFoundation-UpdateArgo
trivy fs --format table --exit-code 1 --ignore-unfixed --vuln-type os,library --severity MEDIUM,HIGH,CRITICAL .
npm run synth AppStreamAL2Stack
npx cdk diff AppStreamAL2Stack
npm run diff
npm run synth
npm run deploy --all
npx cdk synth
cdk list 
cdk list | wc -l
cdk deploy --all --asset-paralelism true --concurrency 3
cdk deploy --all --asset-parallelism true --concurrency 3
cdk synth elasticache-redis-cluster
cdk synth DemoPortalStack_east
cdk diff DemoPortalStack_east
cdk deploy --all --concurrency 2
z RecFoundation
git worktree add ../RecFoundation-UpdateArgo main
../RecFoundation-UpdateArgo
aws-vault exec fp-devd
npx cdk list
npx cdk diff Eks_east
npx cdk synth Eks_east
npx cdk deploy Eks_east
npx cdk synth Eks_west
npx cdk deploy Eks_west
npx cdk deploy Eks_west Eks_east
cdk deploy --all
cdk diff AppStreamIDPStack AppStreamAL2Stack
cdk synth AppStreamAL2Stack
cdk deploy AppStreamAL2Stack
cdk synth Redis_east > redis-east.yaml
code redis-east.yaml
diff redis-east-cfn.yml redis-east.yaml
rm redis-east-cfn.yml redis-east.yaml
npm i @footprint/cdk-constructs@2.25.4 --save
cdk synth Redis_east
cdk diff Redis_east
cdk deploy Redis_east
cdk deploy Redis_west
cdk deploy Redis_west Redis_east
git co -b update-cdk-constructs
git ci -m "chore: update cdk-constructs"
git push origin update-cdk-constructs
git remote -v
rm -rf DataOpsFoundation
git clone git@github.com-bah:FootprintRecreation/DataOpsFoundation.git
cd DataOpsFoundation
npm projen build
npx projen build
cdk synth cross-region-stack-833328140030:us-east-1
cdk diff cross-region-stack-833328140030:us-east-1
../DataOpsFoundation
git worktree remove ../RecFoundation-UpdateArgo
cd FootprintRecFoundation
git worktree add ../FootprintRecFoundation-SSD-38 main
cd ../FootprintRecFoundation-SSD-38
git co -b SSD-38
rm -rf ToolsFoundation
git clone git@github.com-bah:FootprintRecreation/ToolsFoundation.git
cd ToolsFoundation
FootprintRecFoundation-SSD-38
flatpak install flathub com.usebottles.bottles
z FootprintRecFoundation
cd FootprintRecFoundation-SSD-38
ping 192.168.3.19
awslocal s3 list
aws s3 ls --endpoint-url=http://192.168.3.19:4566
pip3 install --upgrade pip
asdf python list
asdf python
python -m pip install --user virtualenv
python -m pip install --upgrade pip
virtualenv .venv
. .venv/bin/activate
pip install https://github.com/boto/botocore/archive/v2.zip https://github.com/aws/aws-cli/archive/v2.zip\
\

pip install --upgrade pip
awslocal
awslocal --version
cdklocal --version
npm i -g aws-cdk
time cdklocal diff
awslocal kinesis list-streams
. .venv/bin/awslocal
cdklocal bootstrap
cdklocal bootstrap --help
CDK_DEFAULT_ACCOUNT=000000000000; CDK_DEFAULT_REGION=us-east-1; cdklocal bootstrap
npx cdklocal --version
npx cdklocal bootstrap
awslocal ecr
awslocal ecr 
awslocal iam ls
awslocal iam --help
awslocal sts get-caller-identity
awslocal ssm
awslocal cloudformation describe-stack-resources --stack-name CDKToolKit
awslocal cloudformation describe-stack-resources --stack-name CDKToolkit
aws ssm get-parameter /cdk-bootstrap/hnb659fds/version
aws ssm get-parameter --name /cdk-bootstrap/hnb659fds/version
awslocal ssm get-parameter --name /cdk-bootstrap/hnb659fds/version
cdklocal synth VpcStack_east > vpc-stack.yaml
cdklocal destroy --all --force
cdklocal --help
cdklocal doctor
cdklocal diff 
cdklocal deploy VpcSsmStack_east --help
cdklocal deploy --method=direct VpcSsmStack_east
cdklocal deploy --method=direct --force VpcSsmStack_east
cdklocal deploy --method direct --force VpcSsmStack_east --help
cdklocal deploy --method direct --force --hotswap VpcSsmStack_east --help
awslocal destroy VpcSsmStack_east
cdklocal destroy VpcSsmStack_east
cdklocal destroy VpcStack_east
awslocal ssm get-parameter --name /cdk-bootstrap/hnb659fds/version --with-decryption
aws ssm get-parameters
aws ssm get-parameters --names vpc
awslocal ssm get-parameter --name vpcid36C38B20
awslocal cloudformation delete-stack 
awslocal cloudformation delete-stack --stack-name 
awslocal cloudformation delete-stack --stack-name VpcStack
awslocal cloudformation delete-stack --stack-name arn:aws:cloudformation:us-east-1:000000000000:stack/VpcStack/535a5a00
cdklocal deploy --method direct --force --hotswap VpcSsmStack_east
cdklocal deploy --method direct --force VpcSsmStack_east
cdklocal deploy --method direct --force VpcStack_east
ls node_modules
rm -rf cdk-constructs
git clone git@github.com-bah:FootprintRecreation/cdk-constructs.git
cd lib
cat package.json
npm clean-install
npm install
cd node_modules/@footprint/cdk-constructs
...
npm link ../cdk-constructs
npm link 
env | grep AWS
env | grep AWS|CDK
env | grep '[AWS|CDK]'
env | grep 'AWS|CDK'
env | grep -e 'AWS'
env | grep -e 'CDK'
env | grep -e '\wAWS'
env | grep -e '\bAWS'
env | grep -e '\bAWS|\bCDK'
env | grep -e 'AWS|CDK'
env | grep -e "AWS|CDK"
npm uninstall @footprint/cdk-constructs
jsii -w --silence-warnings=reserved-word
npx jsii -w --silence-warnings=reserved-word
npx ts-node -w --project tsconfig.dev.json .projenrc.ts
npx ts-node --project tsconfig.dev.json .projenrc.ts --help
npx ts-node --help
npx ts-node --project tsconfig.dev.json .projenrc.ts --swc
npx ts-node --project tsconfig.dev.json .projenrc.ts
npm run default
npm run link
rm vpc-stack.yaml
cpm ci
cdklocal synth VpcStack_east
cdklocal deploy VpcSsmStack_east
awslocal cloudformation list-stacks
awslocal cloudformation describe-stack-resources --stack-name VpcStack
awslocal ec2 create-vpc --cidr-block=10.0.0.0/16 --amazon-provided-ipv6-cidr-block
z SSD
alias awslocal="AWS_ACCESS_KEY_ID=test AWS_SECRET_ACCESS_KEY=test AWS_DEFAULT_REGION=us-east-1 aws --endpoint-url=http://192.168.3.19:4566"
awslocal ec2 describe-vpcs
cdklocal deploy VpcStack_east
cdklocal diff VictorOpsSnsTopicsStack_east
cdklocal deploy VictorOpsSnsTopicsStack_east
cdklocal diff aurorapg_stack_east
cdklocal deploy aurorapg_stack_east
cdklocal deploy aurorapg_stack_east --require-approval never --method direct
MASTER_USER=hello\
MASTER_PW='MyPassw0rd!'\
DB_NAME=test\
awslocal rds create-db-instance \\
    --master-username $MASTER_USER \\
    --master-user-password $MASTER_PW \\
    --db-instance-identifier mydb \\
    --engine postgres \\
    --db-name $DB_NAME \\
    --enable-iam-database-authentication \\
    --db-instance-class db.t3.small
awslocal rds list-db-instances
PORT=$(awslocal rds describe-db-instances --db-instance-identifier mydb | jq -r ".DBInstances[0].Endpoint.Port")\
HOST=$(awslocal rds describe-db-instances --db-instance-identifier mydb | jq -r ".DBInstances[0].Endpoint.Address")
PGPASSWORD=$MASTER_PW psql -d $DB_NAME -U $MASTER_USER -p $PORT -h $HOST -w -c 'CREATE USER myiam WITH LOGIN'\
PGPASSWORD=$MASTER_PW psql -d $DB_NAME -U $MASTER_USER -p $PORT -h $HOST -w -c 'GRANT rds_iam TO myiam'
env | grep -E DB
env | grep -E DB_NAME
cdklocal destroy --all
cdklocal deploy --all --require-approval never --method direct
cdklocal bootstrap aws://000000000000/us-east-1 && cdklocal deploy --all --require-approval never --method direct 
cdklocal list
cdklocal diff quicksight_postgres_datasource_east
cdklocal diff --no-change-set quicksight_postgres_datasource_east
cdklocal deploy --require-approval never --method direct quicksight_postgres_datasource_east
cdklocal synth quicksight_postgres_datasource_east
cdklocal bootstrap aws://000000000000/us-east-1 && cdklocal deploy --all --require-approval never --method direct
awslocal rds describe-db-instances
cdklocal synth aurorapg_stack_east
awslocal secretsmanager get-secret-value --secret-id quicksight-secret
awslocal secretsmanager list-secrets
awslocal secretsmanager get-secret-value --secret-id aurora-quicksight-secret
aws-vault exec fp-build
env | grep -E "AWS|CDK"
cdk list
cdk synth aurorapg_stack_east
cdk diff aurorapg_stack_east
git diff .projenrc.ts
git restore .projenrc.ts
git diff cdk.context.json
git restore cdk.context.json
git restore package.json
git restore package-lock.json
git diff src/commonStacks/VictorOpsSnsTopicsStack.ts
git restore src/commonStacks/VictorOpsSnsTopicsStack.ts
git diff src/commonStacks/VpcStack.ts
git restore src/commonStacks/VpcStack.ts
git diff src/helper-constructs/GlobalDatabaseCluster.ts
git restore src/helper-constructs/GlobalDatabaseCluster.ts
cp src/main.ts src/main.local.ts
cdk synth new QuickSightDataSourceStack_east
cdk synth QuickSightDataSourceStack_east
cdk synth --exclusively QuickSightPostgresDataSourceStack_east
cdk diff --exclusively QuickSightPostgresDataSourceStack_east
git add src/commonStacks/AuroraPostgresStack.ts src/main.ts src/commonStacks/QuickSightDataSourceStack.ts
git ci -m "feature: add QuickSightDataSourceStack"
git add src/commonStacks/AuroraPostgresStack.ts src/main.ts
git ci -m "chore: merge main"
cdk synth
git push origin SSD-38
git rebase -i HEAD~1
git rebase --abort
git config core.editor vim
git config --help
git config get core.editor -g
git global config get core.editor
git config global get core.editor
git config get core.editor
git config get --help
git config get core.editor --global
git config get --global core.editor
git config set --global core.editor vim
git config -l
git config get --local core.editor
git rebase -i HEAD~2
git diff src/main.ts
git add src/main.ts
git diff src/commonStacks/AuroraPostgresStack.ts
git add src/commonStacks/AuroraPostgresStack.ts
git rebase --continue
git log --oneline
../FootprintRecFoundation
git worktree add list
git worktree remove ./list
git worktree list
git worktree add ../FootprintRecFoundation-SSD-38-v2 main
cd ../FootprintRecFoundation-SSD-38-v2
git co -b SSD-38-v2
git reset --hard HEAD
z cdk-constructs
npm run co:login
npm run watch
ls -la node_modules/@footprint
ls -l;a
../FootprintRecFoundation-SSD-38
aws quicksight list-data-sources
cdk synth QuickSightPostgresDataSourceStack_east
cdk deploy QuickSightPostgresDataSourceStack_east
ls node_modules/@footprint
cdk diff QuickSightPostgresDataSourceStack_east
npm ls
npm --help
npm run build-skip-tests
cdk list | grep QuickSight
git diff package-lock.json
it st
cat node_modules/constructs/lib/construct.js
cat node_modules/constructs/lib/construct.js | grep version
cat ../cdk-constructs/node_modules/constructs/lib/construct.js | grep version
cdk synth QuickSightDataSource
npm run upgrade
npm upgrade
npm i constructs
npm install constructs
npm install constructs@latest
npm compile
git stash
git stash pop
npm run compile
npx cdk diff QuickSightDataSource
rm package-lock.json
npm i
npx projen
npx projen upgrade
npx projen build-skip-tests
npm link
npm link @footprint/cdk-constructs
diff node_modules/constructs/lib/construct.js ../cdk-constructs/node_modules/constructs/lib/construct.js
cdk diff QuickSightDataSource
git diff package.json
git ci
git merge origin/main
git co package.json
git co package-lock.json
ll node_modules/@footprint
npx cdk synth QuickSightDataSource
npx cdk list | grep -i quicksight
aws quicksight list-users
aws quicksight list-users --aws-account-id 339712911401
aws quicksight list-namespaces --aws-account-id 339712911401
aws quicksight list-users --aws-account-id 339712911401 --namespace default
echo -n 'mypasswordUSER' | md5sum | awk '{print "md5"$1}'
echo -n 'Broken!09Mialgia' | md5sum | awk '{print "md5"$1}'
echo -n 'Broken!09Mialgiapostgres' | md5sum | awk '{print "md5"$1}'
echo -n 's-zV|8_o2NxcY}}1]YxA:6zWRA[!postgres' | md5sum | awk '{print "md5"$1}'
sudo nala install arandr
nala list bruno
cdk diff QuickSightDataSource --exclusively
npx cdk synth quick_sight_data_source_east --exclusively
diff-so-fancy
zoxide --help
z --help
z query
curl -fsSL https://get.jetify.com/devbox | bash
devbox add python@3.10
../FootprintRecFoundation-SSD-38-v2
z V@
which node
asdf global nodejs 20.12.1
asdf local nodejs 18.20.4
cat .nvmrc
env | grep -E "EDITOR"
env | grep -E "DEBOX"
source ~/.zshrc
which npm
npm install -g aws-cdk
sudo lspci -v
sudo lshw -c video
xrandr --verbose
npx cdk diff quick_sight_data_source_east
take cdk-localstack-sink
cdk init localstack --language typescript
cdk init sample-app --language typescript
npm run build
npm run test
npx cdk diff quick_sight_data_source_east --exclusively
npx cdk deploy quick_sight_data_source_east --exclusively
npx cdk synth quick_sight_data_source_east
npx cdk deploy quick_sight_data_source_east
export AWS_ENDPOINT_URL=http://192.168.3.19:4566
cdklocal synth
cdklocal bootstrap aws://000000000000/us-east-1
cdklocal deploy
rm -rf *
npm i -g yarn
npx projen new awscdk-app-ts
npx cdklocal bootstrap aws://000000000000/us-east-1
npx cdklocal deploy
npx cdklocal destroy
npx projen destroy
brew --help
z dev
mv coolab _archive
mv deeporigin _archive
rm -rf zed
mkdir lab
mv gamedev lab
mv rushstack lab
mv typescript-cheat-sheets lab
mv localstack-demo lab
mv rn2021 lab
mv dindin ehs
cd tools
take devbox
devbox add argocd
devbox add --help
devbox add aws
brew uninstall argocd
navi
brew uninstall turso
brew uninstall tilt
brew uninstall sqlite
brew uninstall velero
brew uninstall spotify-tui
brotli
brotli -h
brew uninstall brotli
brew uninstall localstack
brew uninstall kind
brew uninstall ctlptl
brew uninstall aws-sam-cli
brew uninstall trufflehog
brew uninstall chart-testing
yamale --help
lz4
up
echo hello world | up
brew uninstall navi
brew uninstall sqld
brew uninstall k9s
brew uninstall krb5
brew uninstall kubecolor
brew uninstall kubectx
brew uninstall kubernetes-cli
brew uninstall aws-vault
brew uninstall aws-iam-authenticator
brew uninstall up
brew uninstall berkeley-db@5
brew uninstall crd2pulumi
which curl
flatpak --help
flatpak uninstall plex
flatpak uninstall heroic
flatpak uninstall thunderbird
flatpak uninstall libretro
flatpak uninstall midori
flatpak uninstall kde
flatpak uninstall podman
flatpak uninstall bootles
flatpak uninstall bottles
flatpak uninstall floorp
flatpak uninstall freetube
flatpak uninstall conduktor
flatpak uninstall figma
flatpak uninstall obsidian
flatpak update
procs
sudo snap --help
sudo snap services
sudo snap remove yq
sudo snap remove spotify
sudo snap remove newsflash
sudo snap remove postman
sudo snap remove p7zip-desktop
sudo snap remove procs
sudo snap remove bitwarden
sudo snap remove bw
sudo snap remove chromium
devbox add asdf
sudo apt uninstall zsnes
sudo apt remove zsnes
apt list
apt list --help
apt show
zstd --help
sudo apt remove zoom
sudo apt remove zabbix-*
sudo apt remove zabbix-agent
sudo apt remove zabbix-nginx-conf zabbix-frontend-php zabbix-release zabbix-server-pgsql zabbix-sql-scripts
apt list | rg installed | rg zabbix
sudo apt remove warp-terminal
apt list | rg installed | top
sudo apt remove 1password
systemctl daemon-reload
sudo service expressvpn restart
sudo apt remove expressvpn kubectl
sudo apt remove expressvpn
sudo apt remove autoremove
sudo apt remove vivaldi
sudo apt remove vivaldi-stable
apt list | rg installed
devbox add trivy
sudo apt remove trivy
devbox add sops
sudo apt remove terraform teams termius-app supabase sops skopeo
sudo apt remove postgresql
sudo apt remove postgresql-14 postgresql-client postgresql-client-14 postgresql-client-common postgresql-common
sudo apt remove polypane
sudo apt remove podman
sudo apt remove pack-cli
sudo apt remove opera-stable
sudo apt remove ngrok
sudo apt remove neofetch neovim neovim-runtime
sudo apt remove mysql-apt-config mysql-client mysql-common
sudo apt remove mysql-community-client-core
sudo apt remove mysql-community-client-plugins mysql-community-server-core
sudo apt remove chromium-browser
sudo apt remove chromium-codecs-ffmpeg-extra
devbox add direnv
sudo apt remove direnv
sudo apt remove dive
devbox add dive
devbox add gh
sudo apt remove gh helm jq leiningen
apt list | rg installed | less
which exa
which bat
cargo uninstall bat
devbox add bat
asdf remove --help
asdf remove bun
asdf uninstall bun
asdf uninstall clojure
asdf uninstall elixir
asdf uninstall erlang
sudo asdf uninstall golang
sudo asdf uninstall java
asdf uninstall java
asdf uninstall maven
asdf uninstall kafka
sudo su asdf uninstall golang
sudo su
asdf which
asdf which asdf
asdf update
where asdf
asdf uninstall golang
asdf plugin remove clojure
asdf plugin remove elixir
asdf plugin remove erlang
asdf plugin remove java
asdf plugin remove golang
asdf reshim
asdf plugin remove kafka
asdf plugin remove bun
asdf plugin remove maven
asdf plugin remove chezmoi
asdf uninstall nodejs 18.16.0
asdf uninstall nodejs 18.18.2
asdf uninstall nodejs 20.10.0
cargo --help
cargo --list
which rg
cargo uninstall rg
cargo uninstall ripgrep
devbox add ripgrep
flatpak list
flatpak list | grep garden
sudo snap list
which garden
rm rf ~/.garden
rm -rf ~/.garden
garden
gh
which aws
aws --version
kubectl
rm -rf ~/.pulumi
env | rg pulumi
pulumi
minikube
which minikube
tilt
z V2
devbox shell --config ~/dev/tools/devbox
z devbox
mv devbox.* ~/
rm -rf confluent-control-center
rm bw-completion
ls /usr/bin
cd /usr/bin
cd kitty.app
cd bin
rm kitty
sudo rm kitty
ll | grep kitt
kitty --version
kitten themes
alias
alias | grep ls
alias | grep ll=
sudo apt install vim
sudo apt autoremote
which vim
exa
cargo uninstall exa
asdf --help
rustc
cargo
asdf remove rust
asdf uninstall rust
asdf plugin add rust
asdf plugin remove rust
env | grep -E "DEVBOX"
env | grep "DEVBOX"
devbox
rg
fzf
devbox --help
devbox global run
devbox global run install-hook-zsh
devbox global shellenv
mv devbox.json devbox.json.bkp
mv devbox.lock devbox.lock.bkp
cat devbox.json.bkp
devbox global rm htop glab vscode neofetch btop cheat bash-preexec tree-sitter nodejs python3Full atuin zoxide starship
eval "$(devbox global shellenv --recompute)"
devbox global rm htop
devbox global rm glab
devbox global rm vscode
devbox global rm atuin
atuin
nano .local/share/devbox/global/current/zsh/.zshrc
devbox global add delta
which nvim
devbox search fd
devbox global add fd
zoxide
zoxide query
cd 
sudo apt list | grep zoxide
sudo apt remove zoxide
devbox global add zoxide
z
z v2
which z
which zoxide
brew remove git
cat
aws
kubescape
devbox global rm aws-vault
cd b
alias ls
alias ll
vim
cd fp/FootprintRecFoundation-SSD-38-v2
cd cdk-constructs
rm ~/.zcompdump
kubectl get nodes
kubecolor
kubecolor kubectl get node
locale
cat .envrc
fd
fd --versiobn
cat ~/.zshrc
rm -f ~/.zcompdump; compinit
nano .envrc
direnv allow
devbox global list | grep fd
which fd
fd --version
exec $SHELL
cd baj
compaudit
autoload -Uz compinit
compinit
mv .envrc .envrc.bkp
exec zsh
devbox global rm yq
which asdf
brew list
asdf list
sdf info
asdf info
rm -rf ~/.asdf
env | grep ASDF
aptitude --help
aptitude purge
sudo aptitude purge
sudo aptitude autoremove
sudo aptitude autoclean
sudo aptitude update
devbox global add tldr
tldr aptitude
sudo aptitude remove expressvpn
tldr apt
apt list --installed
apt-key list
ls /etc/apt/sources.list.d
ls /etc/apt/sources.list.d | grep express
rm /etc/apt/sources.list.d/expressvpn.list*
sudo rm /etc/apt/sources.list.d/expressvpn.list*
ls lab
mv lab ehs
nvim
devbox global add oh-my-posh
touch ehs.omp.toml
cat ehs.omp.toml
asdasdasd
cd kitty
cat current-theme.conf
cd .config/kitty
cat kitty.conf | grep theme
cat kitty.conf | rg theme
rm theme.conf
cat kitty.conf.bak
cat kitty.conf.save
nano ~/.config/kitty/kitty.conf
rm .warprc
kitty list-fonts
8;63;154;1386;1694tll
git fetch --all --tags
devbox global add wezterm
wezterm
devbox global rm wezterm
curl -fsSL https://apt.fury.io/wez/gpg.key | sudo gpg --yes --dearmor -o /usr/share/keyrings/wezterm-fury.gpg\
echo 'deb [signed-by=/usr/share/keyrings/wezterm-fury.gpg] https://apt.fury.io/wez/ * *' | sudo tee /etc/apt/sources.list.d/wezterm.list\

sudo nala update
sudo nala install wezterm
ps
touch wezterm.lua
nano wezterm.lua
mv wezterm.lua .wezterm.lua
nano .wezterm.lua
devbox global add yazi
cd ../cdk-constructs
git pull origin master
rm -rf node_modules
npm ci
nano ~/.zshrc
vim ehs.omp.toml
16 * 10
../cdk-constructs
git switch master
git pull
dig 192.168.3.19
devbox global add nmap
nmap 192.168.3.19
ssh-keygen -f .ssh/known_hosts -R "192.168.3.19"
nvim ~/.config/starship.toml
nano ~/.config/starship.toml
code ~/.config/starship.toml
lasd
cc
asdf
kc
kubectx
asd
llaslsad
devbox search aswlocal
pip install awscli-local[ver1]
aws s3 --help
aws s3 
awslocal s3 mb 
awslocal s3 mb help
awslocal s3 mb bucket-localstack
mkdir aws
devbox init
.con
.config
yazi
.mozilla
cd firefox
cat profiles.ini
cd sgp8eube.default-release
pwd
cd ~/snap/firefox/common/.mozilla/firefox
cd btoqqy5v.ehs
ll --sort time
mkdir ~/betterfox
cp user.js ~/betterfox
cp chrome ~/betterfox
cp -r chrome ~/betterfox
~/betterfox
cat user.js
cd chrome
aws sts get-caller-identity --query Account
aws sts get-caller-identity
code ll
brew upgrade'\

aws configure list-profiles
nano ~/.aws/config
cd aws
mv aws localstack
aws configure --profile ehs
devbox global rm oh-my-posh
claer
unset AWS_PROFILE
awslocal s3 mb s3://bucket-local
awslocal s3 rb s3://bucket-local
which cdklocal
export CDK_DEFAULT_ACCOUNT=000000000000
export CDK_DEFAULT_REGION=us-east-1
cdklocal diff
cd downloads
sudo dpkg -i dbeaver-ue_24.1.0_amd64.deb
export AWS_PROFILE=ehs
aws s3 cb s3://ehs-sql-us-east-1
aws s3 rm s3://ehs-sql-us-east-1
aws s3 rm s3://ehs-sql-us-east-1/*
aws s3 rm s3://ehs-sql-us-east-1/dvdrental.tar
aws s3 rb s3://ehs-sql-us-east-1
cdk diff
dd
df -h
lsb_release
lsb_release --help
lsb_release -r
lsb_release -a
sudo vim /etc/bluetooth/input.conf
rfkill list all
lsmod 
lsmod | grep bluetooth
dmesg | grep -i bluetooth
sudo systemctl --user enable pulseaudio
systemctl unmask bluetooth.service
sudo systemctl unmask bluetooth.service
sudo systemctl start bluetooth.service
sudo rmmod btusb
sudo systemctl enable bluetooth.service
sudo systemctl status bluetooth.service
sudo apt remove bluez
sudo systemctl start bluetooth
killall pulseaudio
killall packagekitd
kill 7822
sudo kill 7822
lol
ping jenkins.e.internal.r1s-test.com/
env | grep PROXY
env
env | sort
env | sort | cat
ping jenkins.w.internal.r1s-test.com
ping r1s-test.com
ip 
ip
ip a
ip add
cat /etc/hosts
cat /run/systemd/resolve/resolv.conf
cat /run/systemd/resolve/stub-resolv.conf
ls /etc
cd /etc
ls resolv
cat resolv.conf.fp-saved
ln -s ./resolv.conf /run/systemd/resolve/resolv.conf
ln -sf ./resolv.conf /run/systemd/resolve/resolv.conf
sudo ln -sf ./resolv.conf /run/systemd/resolve/resolv.conf
cp /run/systemd/resolve/stub-resolv.conf /run/systemd/resolve/resolv.conf
cd /run/systemd/resolve
rm resolv.conf
sudo rm resolv.conf
resolvectl restart
resolvectl 
resolvectl --help
resolvectl dns --help
cp stub-resolv.conf resolv.conf
sudo cp stub-resolv.conf resolv.conf
sudo chown --help
sudo chown systemd-resolve resolv.conf
ls /etc/resolv*
resolvectl
resolvectl dns
systemctl status resolv
systemctl status resolve
cat resolv.conf
cat stub-resolv.conf
systemctl --user enable pulseaudio
systemctl --user start pulseaudio
sudo systemctl status bluetooth
sudo systemctl restart bluetooth
journalctl | grep -C 5 blue
journalctl --since "2024-09-01" | grep -C 5 blue
journalctl --since "2024-09-01" | grep -C 5 bluetooth
sudo apt install pulseaudio-module-bluetooth
pulseaudio -k
pulseaudio --start
sudo pactl load-module module-bluetooth-discover
cat /etc/bluetooth/input.conf
sudo snap refresh
brew upgrade
sudo apt install inxi
inxi -SMA
sudo apt-get install --reinstall alsa-base pulseaudio
ls ~/.config/pul*
mv ~/.config/pulse ~/.config/old_pulse
alsamixer
sudo gedit /etc/default/speech-dispatcher
sudo vim /etc/default/speech-dispatcher
aplay -l
sudo apt install --reinstall pulseaudio
sudo apt install --reinstall alsa-base alsa-utils
sudo apt install pulseaudio
sudo apt install pavucontrol
pulseaudio -k 
sudo alsa force-reload
sudo touch /usr/share/pipewire/media-session.d/with-pulseaudio
systemctl --user restart pipewire-session-manager
sudo apt list --installed | grep linux-image
sudo apt install linux-image-6.5.0-35-generic liunx-headers-6.5.0-35-generic
sudo apt list | grep linux-image
sudo apt install linux-image-6.5.0-45-generic liunx-headers-6.5.0-45-generic
sudo apt install linux-image-6.5.0-45-generic linux-headers-6.5.0-45-generic
sudo apt install linux-image-6.5.0-45-generic
sudo apt install linux-image-6.5.0-41-generic
htop
sudo add-apt-repository universe
sudo apt install synaptic
cd localstack
cp localstack fis
cp -r localstack fis
sudo apt install python3-awscli-local
psql
which python3
python3 -m venv .
awslocal s3 ls
pip install boto3
devbox global add python
devbox global rm postgresql
env | sort | grep VENV
. $VENV_DIR/bin/activate
which pip
devbox global add pip
devbox search awslocal
devbox search awscli-local
devbox search localstack
python -v
python --version
devbox search localstack --show-all
devbox global add pipenv
which pipenv
which python
pipenv shell
pip install awscli-local
which awslocal
sudo apt install broadcom-sta-dkms
sudo apt remove linux-headers-6.10.8-061008
sudo apt remove linux-headers-6.10.8-061008-generic
sudo apt remove linux-headers-6.9.12-060912
sudo apt autoremove
sudo apt install libfuse2t64
devbox search starship
devbox global add starship
nvim .zshrc
which zSh
which zsh
chsh -s $(which zsh)
sudo chsh -s $(which zsh)
devbox global add kitty
devbox global rm kitty
curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin
btop -p 0
devbox global add btop
sudo apt purge bluez
sudo apt install bluez
sudo apt install blueman
kitty
which kitty
which kitten
ln -sf ~/.local/kitty.app/bin/kitty ~/.local/kitty.app/bin/kitten ~/.local/bin/
cp ~/.local/kitty.app/share/applications/kitty.desktop ~/.local/share/applications/
cp ~/.local/kitty.app/share/applications/kitty-open.desktop ~/.local/share/applications/
sed -i "s|Icon=kitty|Icon=$(readlink -f ~)/.local/kitty.app/share/icons/hicolor/256x256/apps/kitty.png|g" ~/.local/share/applications/kitty*.desktop
sed -i "s|Exec=kitty|Exec=$(readlink -f ~)/.local/kitty.app/bin/kitty|g" ~/.local/share/applications/kitty*.desktop
echo 'kitty.desktop' > ~/.config/xdg-terminals.list
chsh -s $(which bash)
sudo chsh -s $(which bash)
devbox global rm zsh
sudo apt install zsh
devbox global add aws-vault
aws-vault exec r1s-dev
export AWS_REGION=us-east-2
devbox search aws-cli
devbox search aws
devbox search awscli2
devbox search aws --show-all
devbox global add awscli2
aws s3 ls
aws acm list-certificates
aws acm list-certificates | jq
aws acm list-certificates | jq '.CertificateSummaryList'
aws acm list-certificates | jq '.CertificateSummaryList.DomainName'
aws acm list-certificates | jq '.CertificateSummaryList[].DomainName'
aws acm list-certificates --max-items 400 | jq '.CertificateSummaryList[].DomainName'
aws acm list-certificates --max-items 40
aws acm list-certificates --includes keyTypes=RSA_2048,RSA_4096 | jq '.CertificateSummaryList'
aws acm list-certificates --includes keyTypes=RSA_2048,RSA_4096 | jq '.CertificateSummaryList[].CertificateArn'
aws acm list-certificates --includes keyTypes=RSA_2048,RSA_4096 | jq '.CertificateSummaryList[].CertificateArn' | wc -l
aws acm list-certificates --includes keyTypes=RSA_2048,RSA_4096
aws acm list-certificates --includes keyTypes=RSA_2048,RSA_4096 --certificate-statuses EXPIRED | jq '.CertificateSummaryList[]' | wc -l
aws acm list-certificates --includes keyTypes=RSA_2048,RSA_4096 --certificate-statuses EXPIRED | jq '.CertificateSummaryList[].CertificateArn' | 
aws acm list-certificates --includes keyTypes=RSA_2048,RSA_4096 --certificate-statuses EXPIRED | jq '.CertificateSummaryList[].CreatedAt'
aws acm list-certificates --includes keyTypes=RSA_2048,RSA_4096 --certificate-statuses EXPIRED | jq '.CertificateSummaryList[].CreatedAt' | sort
aws acm delete-certificate --certificate-arn arn:aws:acm:us-east-2:507672019655:certificate/361fbb15-66d9-471b-bfca-c8d9b38d4c45
export AWS_REGION=us-east-1
aws acm list-certificates --includes keyTypes=RSA_2048,RSA_4096 --certificate-statuses EXPIRED | jq '.CertificateSummaryList[].CertificateArn' | wc -l
aws acm list-certificates --includes keyTypes=RSA_2048,RSA_4096 --certificate-statuses EXPIRED | jq '.CertificateSummaryList[].CertificateArn'
aws acm list-certificates --includes keyTypes=RSA_2048,RSA_4096 --certificate-statuses EXPIRED | jq '.CertificateSummaryList[]'
ping jenkins.e.internal.r1s-test.com
sudo resolvectl dns tun0
sudo resolvectl domain tun0
cd /etc/
sudo ln -sf /run/systemd/resolve/resolv.conf ./resolv.conf
ls resolv*
sudo resolvectl status
ping jenkins.e.internal.r1s-dev.com
git
cd v2
lspci
inxi -Fxz
hcitool dev
sudo rfkill unblock bluetooth
rfkill list bluetooth
sudo hciconfig hci0 piscan
sudo service network-manager restart
sudo systemctl restart systemd-networkd
vim .profile
networkctl status wlp114s0
sudo apt-get install --reinstall linux-firmware
networkctl status
hcitool inq
sudo fwupdmgr update
rfkill --help
shutdown -h now
uname -r
devbox search ulauncher
devbox global add ulancher
devbox global add ulauncher
devbox global rm ulauncher
sudo add-apt-repository universe -y && sudo add-apt-repository ppa:agornostal/ulauncher -y && sudo apt update && sudo apt install ulauncher
ulauncher --help
python3 <(curl https://raw.githubusercontent.com/catppuccin/ulauncher/main/install.py -fsSL)
python3 <(curl https://raw.githubusercontent.com/catppuccin/ulauncher/main/install.py -fsSL) -f all -a all
ulauncher
sudo apt install gtk2-engines-murrine
devbox search zellij
devbox global add zellij
devbox global add duf
rfkill list
inxi --admin --verbosity=7 --filter --no-host --width
rfkill unblock bluetooth
sudo hciconfig hci0 up
du -h | sort -hr | head
sudo du -h | sort -hr | head
sudo apt install ncdu
sudo apt uninstall ncdu
sudo apt remove ncdu
devbox search ncdu
devbox global add ncdu
duf
cursor
zshcfg
export AWS_ENDPOINT_URL=http://192.168.3.30:4566
cd .config/starship.toml
vim starship.toml
vim ~/.config/starship.toml
sudo apt update
sudo apt upgrade
ssh ehs@192.168.3.19
zellij --help
zellij options
zellij setup --generate-completion zsh
env | sort | grep "
cdklocal bootstrap aws://$CDK_DEFAULT_ACCOUNT/$CDK_DEFAULT_REGION
mv old.envrc.bkp
mv .envrc.bkp old.envrc.bkp
unset AWS_ACCESS_KEY_ID
unset AWS_CLOUDFORMATION_ENDPOINT
df
code ~/.zshrc
killall zellij
flatpak install flathub io.dbeaver.DBeaverCommunity
cd bah
cd fp
git clone https://github.com/FootprintRecreation/r1s-frontend.git
git clone git@github.com:FootprintRecreation/r1s-frontend.git
git clone git@github.com-bah:FootprintRecreation/r1s-frontend.git
cd r1s-frontend
git switch main
gd
exit
bash
xinit
reboot
env | sort | grep "AWS|CDK"
env | grep "AWS|CDK" | sort
cursor .
curl -fsSL https://downloads.k8slens.dev/keys/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/lens-archive-keyring.gpg > /dev/null
echo "deb [arch=amd64 signed-by=/usr/share/keyrings/lens-archive-keyring.gpg] https://downloads.k8slens.dev/apt/debian stable main" | sudo tee /etc/apt/sources.list.d/lens.list > /dev/null
sudo nala update && sudo nala install lens
lens-desktop
cp devbox.json ../
cp devbox.lock ../
ls ../
la ../
rm devbox.*
cat .envrc.bkp
vim ~/.aws/config
aws sso login
aws sso login --help
aws sso login --profile fp-dev
aws eks update-kubeconfig --name fp-dev-east --alias fp-dev-east --profile fp-dev --region us-east-1
wget -qO- https://d20adtppz83p9s.cloudfront.net/GTK/latest/debian-repo/awsvpnclient_public_key.asc | sudo tee /etc/apt/trusted.gpg.d/awsvpnclient_public_key.asc
echo "deb [arch=amd64] https://d20adtppz83p9s.cloudfront.net/GTK/latest/debian-repo ubuntu-20.04 main" | sudo tee /etc/apt/sources.list.d/aws-vpn-client.list
sudo nala update && sudo nala install awsvpnclient
cd /var/log
cd aws-vpn-client
open postinst.log
open preinst.log
open postrm.log
systemd --help
tldr systemd
OUT="${XDG_CONFIG_HOME:-$HOME/.config}/k9s/skins"\
mkdir -p "$OUT"\
curl -L https://github.com/catppuccin/k9s/archive/main.tar.gz | tar xz -C "$OUT" --strip-components=2 k9s-main/dist
cd k9s
cd skins
vim config.yaml
k9s
cd ~/.config/AWSVPNClient
resolvectl status
cd OpenVpnConfigs
ll ../TemporaryCredentials
cd TemporaryCredentials
cd us-east-1
../
OpenVpnConfigs
cat current_connection.txt
cat Footprint
cat /etc/systemd/system/awsvpnclient.service
cat /etc/resolv.conf
tail /etc/resolv.conf
tail -f /etc/resolv.conf
vim Footprint
cd logs
tail -f aws_vpn_client_20241002.log
cd zellij
vim config.kdl
vim ~/.config/zellij/config.kdl
aws-vault exec fp-dev
dev
fis
cd fis
cd DemoDerby
ssh ehs@192.168.3.30
ssh ehs@192.168.3.37
lsusb -v
cat /etc/default/grub
sudo cp /etc/default/grub ./
sed -i 's|GRUB_CMDLINE_LINUX_DEFAULT="|&usbcore.autosuspend=-1 |' grub
cat grub
sed -i 's|GRUB_CMDLINE_LINUX_DEFAULT="|&usbcore.autosuspend=-1 |' /etc/default/grub
sudo sed -i 's|GRUB_CMDLINE_LINUX_DEFAULT="|&usbcore.autosuspend=-1 |' /etc/default/grub
update-grub
sudo update-grub
flatpak update -y
bluetoothctl
systemctl restart bluetooth.service
lsusb
systemctl status bluetooth.service
dmesg | egrep -i 'blue|firm'
dmesg | egrep -i 'bluetooth'
systemctl reboot
flatpak install flathub dev.zed.Zed
code .
cd /media
cd ehs
cd EHS\ Master\ Drive
ncdu
flatpak install flathub com.rtosta.zapzap
btop
ssh ehs@192.168.3.108
ssh root@192.168.3.108
aws-vault exec fp-demo-derby --region us-west-2
lsblk
fsck /dev/sda1
sudo fsck /dev/sda1
fdisk -l
update
upgrade
devbox global update
cd dev
devbox list
devbox update
refresh
clear
aws-vault exec fp-demo-derby --region us-east-1
cd demoderby
zellij
sudo nala remove slirp4netns
cd footprint
env | grep "DOCKER"
devbox shell
ip addr
mount 192.168.3.39:/ /mnt/nfs
mkdir /mnt/omv
sudo mkdir /mnt/omv
mount 192.168.3.39:/ /mnt/omv
sudo nala install nfs-common
cd /mnt/omv/ehs-10tb
sudo mount -t nfs 192.168.3.39:/ /mnt/omv
dmesg | tail
ls -la ./.
chmod u+r ./ehs-10tb
sudo umount
sudo umount --help
la /mnt
la /mnt/omv
cat /etc/exports
mkdir /mnt/nfs
sudo mkdir /mnt/nfs
sudo mount -t nfs 192.168.3.39:/export /mnt/nfs
sudo umount /mnt/nfs
la /mnt/nfs/ehs-10tb
la /mnt/
rm -rf /mnt/nfs
sudo rm -rf /mnt/nfs
sudo mount -t nfs -o rw,anongid=100 192.168.3.39:/export /mnt/nfs
sudo mount -t nfs -o rw,anongid=100 192.168.3.39:/export /mnt/omv
sudo mount -t nfs -o rw 192.168.3.39:/export /mnt/omv
ls /mnt/nfs/ehs-10tb
ls /mnt/omv/ehs-10tb
sudo umount /mnt/omv
sudo mount 192.168.3.39:/ /mnt/omv
cd /mnt/omv
cd ehs-10tb
cd media
cd movies
ls -la
sudo nala install virt-manager
cat /etc/passwd
cat /etc/passwd | sort
cat /etc/group
cat /etc/group | sort
sudo usermod -aG libvirt ehs
groups
sudo virt-host-validate
virt-manager -c qemu:///session
cd win98
cd desktop/win98-original
tar -zxvf patcher9x-0.8.50-linux-amd64.tar.gz
./patcher9x ./win98
mv patcher9x-0.8.50-linux-amd64.tar.gz ~/downloads
rm patcher9x
cat ./* > win98-patched.iso
cat ./**/* > win98-patched.iso
mv win98-original win98-patched
genisoimage -o win98-patched.iso -V win98-patched -r -J ./win98-patched
tldr genisoimage
genisoimage -o win98-patched.iso -V win98-patched -r -J -l ./win98-patched
sudo nala upgrade
sudo nala install brasero
rm win98-archive-man.iso
genisoimage -o win98-patched.iso -V win98-patched -no-emul-boot -boot-load-size 8 -iso-level 2 -udf -joliet -D -N -relaxed-filenames  ./win98-patched
genisoimage -o win98-patched.iso -V win98-patched -no-emul-boot -boot-load-size 8 -iso-level 2 -udf -joliet -D -N -R -relaxed-filenames  ./win98-patched
genisoimage -o win98-patched.iso -V win98-patched -no-emul-boot -boot-load-size 8 -iso-level 2 -udf -joliet -D -N -R -relaxed-filenames -input-charset utf-8  ./win98-patched
genisoimage -o win98-patched.iso -V win98-patched -eltorito-boot -no-emul-boot -boot-load-size 8 -iso-level 2 -udf -joliet -D -N -R -relaxed-filenames -input-charset utf-8  ./win98-patched
mkisofs \\
-iso-level 4 \\
-l \\
-R \\
-UDF \\
-D \\
-d boot/etfsboot.com \\
-no-emul-boot \\
-boot-load-size 8 \\
-hide boot.catalog \\
-eltorito-alt-boot \\
-eltorito-platform efi \\
-no-emul-boot \\
-b efi/microsoft/boot/efisys.bin \\
-o win98-patched.iso \\
./win98-patched
mkisofs \\
-iso-level 4 \\
-l \\
-R \\
-udf \\
-D \\
-d boot/etfsboot.com \\
-no-emul-boot \\
-boot-load-size 8 \\
-hide boot.catalog \\
-eltorito-alt-boot \\
-eltorito-platform efi \\
-no-emul-boot \\
-b efi/microsoft/boot/efisys.bin \\
-o win98-patched.iso \\
./win98-patched
mv ~/downloads/Windows\ 98\ Second\ Edition.iso ./
mv Windows\ 98\ Second\ Edition.iso win98-se.iso
dd if=win98-se.iso of=boot.img count=8 skip=734
mkisofs -o win98-patched.iso -b boot.img -no-emul-boot -c BOOT.CAT -iso-level 2 -udf -J -l -D -N -joliet-long -relaxed-filenames ./win98-patched
mkisofs -o win98-patched.iso -b boot.img -no-emul-boot -c BOOT.CAT -iso-level 2 -udf -J -l -D -N -R -joliet-long -relaxed-filenames ./win98-patched
mkisofs -o win98-patched.iso -b ./boot.img -no-emul-boot -c BOOT.CAT -iso-level 2 -udf -J -l -D -N -R -joliet-long -relaxed-filenames ./win98-patched
command mkisofs
hash mkisofs
which mkisofs
la /usr/bin/mkisofs
sudo nala install mkisofs
mkisofs -no-emul-boot -b boot/etfsboot.com -boot-load-seg 0x07C0 -boot-load-size 8 -iso-level 2 -udf -joliet -D -N -relaxed-filenames -o win98-patched.iso win98-patched
rm win98-patched
rm -rf win98-patched
rm win98-patched.iso
rm win98-se.iso
rm boot.img
sudo nala remove brasero
sudo nala autoremove
nala --help
sudo nala autopurge
sudo nala clean
nala list -iN
cd obsidian/ehs
git remote add origin git@github.com:elderhsouza/obsidian.git
which git
cd
cd .cursor
ls extensions
cd .cursor-tutor
cat getting_started.md
ls Downloads
la Downloads
rm -rf Downloads
mkdir dotfiles
mv dotfiles .dotfiles
cd .dotfiles
git init
git remote add origin git@github.com:elderhsouza/dotfiles.git
git branch -M main
git push -u origin main
cp ../.gitconfig .
cp ../.bashrc .
rm .npmrc
cp ../.profile .
cp ../.histfile .
cp -rf ../.aws .
cd .aws-profile
rm -rf .aws-profile
ls .aws-sam
rm -rf .aws-sam
cp -rf ../.kube .
cp -rf ../.config/zellij .
mkdir .config
cp -rf ../.config/zellij ./.config/zellij
ll .config
rm -rf zellij
cp -rf ../.config/nvim .config
ls .config
ls .config/nvim
cp -rf ../.config/starship.toml .config
cp -rf ../.config/kitty .config
cp -rf ../.config/k9s .config
cp -rf ../.config/devbox .config
cp -rf ../.config/btop .config
cp -rf ../.config/bat .config
ll -t
ll --tree
la --help
su ehs
alias la
vim ../.zshrc
la --tree -A
rm -rf .kube
cat .gitconfig
rm .gitconfig
la .aws
la --tree .aws
rm -rf .aws
cd .config
rm -rf devbox
rm -rf .config/devbox
devbox info
devbox help
devbox global
devbox global path
cd ../.local
cd share
mkdir -p .local/share
cp -rf ../.local/share/devbox .local/share
cd .local
la -tree
la --tree
lka
ls
cat process-compose.json
dbr
devbox global list
devbox global list | sort
cat init.sh
cd zsh
cd bash
cat .bashrc
reload
cd devbox
cd global
cd default
cd .devbox
git push
git push --set-upstream origin main
vim ~/.zshrc
vim .zshrc
gss
git add .zshrc
git st
git ci -m "fix: remove pat"
git push --set-upstream origin main --force
git config --local
git config --local list
cat ../.gitconfig
vim ../.gitconfig
git config list
git push origin main --force
git filter-branch --force --index-filter "git rm --cached --ignore-unmatch .zshrc" --prune-empty --tag-name-filter cat -- --all
git log
cp ../.zshrc .
cat .zshrc
git add .
git ci -m "feat: dotfiles"
ll
git push --verbose --dry-run --force
git push --set-upstream origin main --force --dry-run --verbose
git push --set-upstream origin main --force --verbose
cd -
stow .
cd ../.local/share/devbox/global/default/.devbox
cat state.json
..
cat devbox.json
la
rm -rf .devbox
refresh-global
zsh
: 1728398851:0;command direnv
: 1728398860:0;la
: 1728398865:0;cd .dotfiles
: 1728398866:0;ll
: 1728398866:0;la
: 1728398870:0;cd .local
: 1728398872:0;ls
: 1728398882:0;cd share/devbox/global/default
: 1728398883:0;la
: 1728398887:0;rm -rf .devbox
: 1728398888:0;la
: 1728398893:0;git st
: 1728398900:0;cd ..
: 1728398903:0;git st
: 1728398913:0;ll
: 1728398915:0;la
: 1728398916:0;cd devbox
: 1728398952:0;git fetch --all --tags
: 1728398983:0;..
: 1728398987:0;stow .
: 1728399008:0;stow -D .
: 1728399015:0;..
: 1728399017:0;la
: 1728399027:0;cd .dotfiles
: 1728399028:0;la
: 1728399036:0;stow --help
: 1728399120:0;stow . --simulate --verbose=5
: 1728399171:0;stow . --simulate --verbose=5 --adopt
: 1728399191:0;stow . --simulate --adopt
: 1728399214:0;..
: 1728399222:0;cd .dotfiles/.local/share/devbox/global
: 1728399223:0;la
: 1728399233:0;rm current
: 1728399234:0;la
: 1728399243:0;git add .
: 1728399245:0;git st
: 1728399257:0;..
: 1728399263:0;stow . --simulate --adopt
: 1728399283:0;..
: 1728399288:0;vim .zshrc
: 1728399306:0;cd .dotfiles
: 1728399309:0;stow . --simulate --adopt
: 1728399323:0;stow . --simulate --adopt --verbose 5
: 1728399340:0;stow . --adopt
: 1728399347:0;..
: 1728399351:0;cd .dotfiles
: 1728399352:0;la
: 1728399354:0;..
: 1728399355:0;la
: 1728399367:0;cd .dotfiles
: 1728399369:0;git st
: 1728399371:0;git add .
